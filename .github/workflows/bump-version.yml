# .github/workflows/bump-version.yml
# Github Action으로 Bump 자동화하기 위한 워크플로우
# 버전 관리를 처리하며, cz bump 명령어를 통해 버전을 증가시키고 태그를 추가한 후, 변경 사항을 원격 리포지토리에 푸시
name: Bump version

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install commitizen

      - name: Create bump and changelog
        run: |
          cz bump --yes --changelog > body.md
          VERSION=$(cz bump --dry-run --quiet --no-verify)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes and tags
        run: |
          git push origin main --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.VERSION }}  # 위에서 가져온 VERSION 값을 사용
          bodyFile: "body.md"
          skipIfReleaseExists: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
